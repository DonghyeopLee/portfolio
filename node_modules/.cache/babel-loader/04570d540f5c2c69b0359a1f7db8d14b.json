{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextDrawer = exports.validTypes = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nexports.validTypes = [\"text\", \"character\", \"char\"];\n\nclass TextDrawer {\n  getSidesCount() {\n    return 12;\n  }\n\n  async init(container) {\n    const options = container.actualOptions;\n\n    if (exports.validTypes.find(t => (0, Utils_1.isInArray)(t, options.particles.shape.type))) {\n      const shapeOptions = exports.validTypes.map(t => options.particles.shape.options[t]).find(t => !!t);\n\n      if (shapeOptions instanceof Array) {\n        const promises = [];\n\n        for (const character of shapeOptions) {\n          promises.push((0, Utils_1.loadFont)(character));\n        }\n\n        await Promise.allSettled(promises);\n      } else {\n        if (shapeOptions !== undefined) {\n          await (0, Utils_1.loadFont)(shapeOptions);\n        }\n      }\n    }\n  }\n\n  draw(context, particle, radius, opacity) {\n    var _a, _b, _c;\n\n    const character = particle.shapeData;\n\n    if (character === undefined) {\n      return;\n    }\n\n    const textData = character.value;\n\n    if (textData === undefined) {\n      return;\n    }\n\n    const textParticle = particle;\n\n    if (textParticle.text === undefined) {\n      textParticle.text = textData instanceof Array ? (0, Utils_1.itemFromArray)(textData, particle.randomIndexData) : textData;\n    }\n\n    const text = textParticle.text;\n    const style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\";\n    const weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\";\n    const size = Math.round(radius) * 2;\n    const font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\";\n    const fill = particle.fill;\n    const offsetX = text.length * radius / 2;\n    context.font = `${style} ${weight} ${size}px \"${font}\"`;\n    const pos = {\n      x: -offsetX,\n      y: radius / 2\n    };\n    context.globalAlpha = opacity;\n\n    if (fill) {\n      context.fillText(text, pos.x, pos.y);\n    } else {\n      context.strokeText(text, pos.x, pos.y);\n    }\n\n    context.globalAlpha = 1;\n  }\n\n}\n\nexports.TextDrawer = TextDrawer;","map":{"version":3,"names":["Object","defineProperty","exports","value","TextDrawer","validTypes","Utils_1","require","getSidesCount","init","container","options","actualOptions","find","t","isInArray","particles","shape","type","shapeOptions","map","Array","promises","character","push","loadFont","Promise","allSettled","undefined","draw","context","particle","radius","opacity","_a","_b","_c","shapeData","textData","textParticle","text","itemFromArray","randomIndexData","style","weight","size","Math","round","font","fill","offsetX","length","pos","x","y","globalAlpha","fillText","strokeText"],"sources":["C:/Users/XGaming Systems/Downloads/Portfolio-v2-main/Portfolio_Ian/node_modules/tsparticles/Shapes/Text/TextDrawer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDrawer = exports.validTypes = void 0;\nconst Utils_1 = require(\"../../Utils\");\nexports.validTypes = [\"text\", \"character\", \"char\"];\nclass TextDrawer {\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (exports.validTypes.find((t) => (0, Utils_1.isInArray)(t, options.particles.shape.type))) {\n            const shapeOptions = exports.validTypes.map((t) => options.particles.shape.options[t]).find((t) => !!t);\n            if (shapeOptions instanceof Array) {\n                const promises = [];\n                for (const character of shapeOptions) {\n                    promises.push((0, Utils_1.loadFont)(character));\n                }\n                await Promise.allSettled(promises);\n            }\n            else {\n                if (shapeOptions !== undefined) {\n                    await (0, Utils_1.loadFont)(shapeOptions);\n                }\n            }\n        }\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? (0, Utils_1.itemFromArray)(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\";\n        const weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\";\n        const size = Math.round(radius) * 2;\n        const font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\";\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n}\nexports.TextDrawer = TextDrawer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}