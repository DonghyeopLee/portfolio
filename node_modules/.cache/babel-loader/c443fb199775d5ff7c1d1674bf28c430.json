{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RollUpdater = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Enums_1 = require(\"../../Enums\");\n\nfunction updateRoll(particle, delta) {\n  const roll = particle.options.roll;\n\n  if (!particle.roll || !roll.enable) {\n    return;\n  }\n\n  const speed = particle.roll.speed * delta.factor;\n  const max = 2 * Math.PI;\n  particle.roll.angle += speed;\n\n  if (particle.roll.angle > max) {\n    particle.roll.angle -= max;\n  }\n}\n\nclass RollUpdater {\n  init(particle) {\n    const rollOpt = particle.options.roll;\n\n    if (rollOpt.enable) {\n      particle.roll = {\n        angle: Math.random() * Math.PI * 2,\n        speed: (0, Utils_1.getRangeValue)(rollOpt.speed) / 360\n      };\n\n      if (rollOpt.backColor) {\n        particle.backColor = (0, Utils_1.colorToHsl)(rollOpt.backColor);\n      } else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = Math.random() >= 0.5 ? Enums_1.AlterType.darken : Enums_1.AlterType.enlighten;\n        particle.roll.alter = {\n          type: alterType,\n          value: alterType === Enums_1.AlterType.darken ? rollOpt.darken.value : rollOpt.enlighten.value\n        };\n      } else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n          type: Enums_1.AlterType.darken,\n          value: rollOpt.darken.value\n        };\n      } else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n          type: Enums_1.AlterType.enlighten,\n          value: rollOpt.enlighten.value\n        };\n      }\n    } else {\n      particle.roll = {\n        angle: 0,\n        speed: 0\n      };\n    }\n  }\n\n  isEnabled(particle) {\n    const roll = particle.options.roll;\n    return !particle.destroyed && !particle.spawning && roll.enable;\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateRoll(particle, delta);\n  }\n\n}\n\nexports.RollUpdater = RollUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","RollUpdater","Utils_1","require","Enums_1","updateRoll","particle","delta","roll","options","enable","speed","factor","max","Math","PI","angle","init","rollOpt","random","getRangeValue","backColor","colorToHsl","darken","enlighten","alterType","AlterType","alter","type","isEnabled","destroyed","spawning","update"],"sources":["C:/Users/XGaming Systems/Downloads/Portfolio-v2-main/Portfolio_Ian/node_modules/tsparticles/Updaters/Roll/RollUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RollUpdater = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !roll.enable) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor;\n    const max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nclass RollUpdater {\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt.enable) {\n            particle.roll = {\n                angle: Math.random() * Math.PI * 2,\n                speed: (0, Utils_1.getRangeValue)(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = (0, Utils_1.colorToHsl)(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = Math.random() >= 0.5 ? Enums_1.AlterType.darken : Enums_1.AlterType.enlighten;\n                particle.roll.alter = {\n                    type: alterType,\n                    value: alterType === Enums_1.AlterType.darken ? rollOpt.darken.value : rollOpt.enlighten.value,\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: Enums_1.AlterType.darken,\n                    value: rollOpt.darken.value,\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: Enums_1.AlterType.enlighten,\n                    value: rollOpt.enlighten.value,\n                };\n            }\n        }\n        else {\n            particle.roll = { angle: 0, speed: 0 };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\nexports.RollUpdater = RollUpdater;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}