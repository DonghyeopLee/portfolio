{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitters = void 0;\n\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\n\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\n\nconst Enums_1 = require(\"./Enums\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nclass Emitters {\n  constructor(container) {\n    this.container = container;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = [];\n    const overridableContainer = container;\n\n    overridableContainer.getEmitter = idxOrName => idxOrName === undefined || typeof idxOrName === \"number\" ? this.array[idxOrName || 0] : this.array.find(t => t.name === idxOrName);\n\n    overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n\n    overridableContainer.playEmitter = idxOrName => {\n      const emitter = overridableContainer.getEmitter(idxOrName);\n\n      if (emitter) {\n        emitter.externalPlay();\n      }\n    };\n\n    overridableContainer.pauseEmitter = idxOrName => {\n      const emitter = overridableContainer.getEmitter(idxOrName);\n\n      if (emitter) {\n        emitter.externalPause();\n      }\n    };\n  }\n\n  init(options) {\n    var _a, _b;\n\n    if (!options) {\n      return;\n    }\n\n    if (options.emitters) {\n      if (options.emitters instanceof Array) {\n        this.emitters = options.emitters.map(s => {\n          const tmp = new Emitter_1.Emitter();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.emitters instanceof Array) {\n          this.emitters = new Emitter_1.Emitter();\n        }\n\n        this.emitters.load(options.emitters);\n      }\n    }\n\n    const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n\n    if (interactivityEmitters) {\n      if (interactivityEmitters instanceof Array) {\n        this.interactivityEmitters = interactivityEmitters.map(s => {\n          const tmp = new Emitter_1.Emitter();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = new Emitter_1.Emitter();\n        }\n\n        this.interactivityEmitters.load(interactivityEmitters);\n      }\n    }\n\n    if (this.emitters instanceof Array) {\n      for (const emitterOptions of this.emitters) {\n        this.addEmitter(emitterOptions);\n      }\n    } else {\n      this.addEmitter(this.emitters);\n    }\n  }\n\n  play() {\n    for (const emitter of this.array) {\n      emitter.play();\n    }\n  }\n\n  pause() {\n    for (const emitter of this.array) {\n      emitter.pause();\n    }\n  }\n\n  stop() {\n    this.array = [];\n  }\n\n  update(delta) {\n    for (const emitter of this.array) {\n      emitter.update(delta);\n    }\n  }\n\n  handleClickMode(mode) {\n    const container = this.container;\n    const emitterOptions = this.emitters;\n    const modeEmitters = this.interactivityEmitters;\n\n    if (mode === Enums_1.EmitterClickMode.emitter) {\n      let emitterModeOptions;\n\n      if (modeEmitters instanceof Array) {\n        if (modeEmitters.length > 0) {\n          emitterModeOptions = (0, Utils_1.itemFromArray)(modeEmitters);\n        }\n      } else {\n        emitterModeOptions = modeEmitters;\n      }\n\n      const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : emitterOptions instanceof Array ? (0, Utils_1.itemFromArray)(emitterOptions) : emitterOptions;\n      const ePosition = container.interactivity.mouse.clickPosition;\n      this.addEmitter((0, Utils_1.deepExtend)({}, emittersOptions), ePosition);\n    }\n  }\n\n  resize() {\n    for (const emitter of this.array) {\n      emitter.resize();\n    }\n  }\n\n  addEmitter(options, position) {\n    const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n    this.array.push(emitter);\n    return emitter;\n  }\n\n  removeEmitter(emitter) {\n    const index = this.array.indexOf(emitter);\n\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  }\n\n}\n\nexports.Emitters = Emitters;","map":{"version":3,"names":["Object","defineProperty","exports","value","Emitters","EmitterInstance_1","require","Emitter_1","Enums_1","Utils_1","constructor","container","array","emitters","interactivityEmitters","overridableContainer","getEmitter","idxOrName","undefined","find","t","name","addEmitter","options","position","playEmitter","emitter","externalPlay","pauseEmitter","externalPause","init","_a","_b","Array","map","s","tmp","Emitter","load","interactivity","modes","emitterOptions","play","pause","stop","update","delta","handleClickMode","mode","modeEmitters","EmitterClickMode","emitterModeOptions","length","itemFromArray","emittersOptions","ePosition","mouse","clickPosition","deepExtend","resize","EmitterInstance","push","removeEmitter","index","indexOf","splice"],"sources":["C:/Users/XGaming Systems/Downloads/Portfolio-v2-main/Portfolio_Ian/node_modules/tsparticles/Plugins/Emitters/Emitters.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitters = void 0;\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nconst Enums_1 = require(\"./Enums\");\nconst Utils_1 = require(\"../../Utils\");\nclass Emitters {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = [];\n        const overridableContainer = container;\n        overridableContainer.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n        overridableContainer.playEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        overridableContainer.pauseEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.emitters) {\n            if (options.emitters instanceof Array) {\n                this.emitters = options.emitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.emitters instanceof Array) {\n                    this.emitters = new Emitter_1.Emitter();\n                }\n                this.emitters.load(options.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = new Emitter_1.Emitter();\n                }\n                this.interactivityEmitters.load(interactivityEmitters);\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const emitterOptions = this.emitters;\n        const modeEmitters = this.interactivityEmitters;\n        if (mode === Enums_1.EmitterClickMode.emitter) {\n            let emitterModeOptions;\n            if (modeEmitters instanceof Array) {\n                if (modeEmitters.length > 0) {\n                    emitterModeOptions = (0, Utils_1.itemFromArray)(modeEmitters);\n                }\n            }\n            else {\n                emitterModeOptions = modeEmitters;\n            }\n            const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? (0, Utils_1.itemFromArray)(emitterOptions) : emitterOptions);\n            const ePosition = container.interactivity.mouse.clickPosition;\n            this.addEmitter((0, Utils_1.deepExtend)({}, emittersOptions), ePosition);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    addEmitter(options, position) {\n        const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Emitters = Emitters;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}