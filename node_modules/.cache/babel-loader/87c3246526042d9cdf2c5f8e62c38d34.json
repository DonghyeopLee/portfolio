{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QuadTree = void 0;\n\nconst Rectangle_1 = require(\"./Rectangle\");\n\nconst Circle_1 = require(\"./Circle\");\n\nconst CircleWarp_1 = require(\"./CircleWarp\");\n\nconst NumberUtils_1 = require(\"./NumberUtils\");\n\nclass QuadTree {\n  constructor(rectangle, capacity) {\n    this.rectangle = rectangle;\n    this.capacity = capacity;\n    this.points = [];\n    this.divided = false;\n  }\n\n  subdivide() {\n    const x = this.rectangle.position.x;\n    const y = this.rectangle.position.y;\n    const w = this.rectangle.size.width;\n    const h = this.rectangle.size.height;\n    const capacity = this.capacity;\n    this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n    this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n    this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n    this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n    this.divided = true;\n  }\n\n  insert(point) {\n    var _a, _b, _c, _d, _e;\n\n    if (!this.rectangle.contains(point.position)) {\n      return false;\n    }\n\n    if (this.points.length < this.capacity) {\n      this.points.push(point);\n      return true;\n    }\n\n    if (!this.divided) {\n      this.subdivide();\n    }\n\n    return (_e = ((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) || ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) || ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) || ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point))) !== null && _e !== void 0 ? _e : false;\n  }\n\n  queryCircle(position, radius) {\n    return this.query(new Circle_1.Circle(position.x, position.y, radius));\n  }\n\n  queryCircleWarp(position, radius, containerOrSize) {\n    const container = containerOrSize;\n    const size = containerOrSize;\n    return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n  }\n\n  queryRectangle(position, size) {\n    return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n  }\n\n  query(range, found) {\n    var _a, _b, _c, _d;\n\n    const res = found !== null && found !== void 0 ? found : [];\n\n    if (!range.intersects(this.rectangle)) {\n      return [];\n    } else {\n      for (const p of this.points) {\n        if (!range.contains(p.position) && (0, NumberUtils_1.getDistance)(range.position, p.position) > p.particle.getRadius()) {\n          continue;\n        }\n\n        res.push(p.particle);\n      }\n\n      if (this.divided) {\n        (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n        (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n        (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n        (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n      }\n    }\n\n    return res;\n  }\n\n}\n\nexports.QuadTree = QuadTree;","map":{"version":3,"names":["Object","defineProperty","exports","value","QuadTree","Rectangle_1","require","Circle_1","CircleWarp_1","NumberUtils_1","constructor","rectangle","capacity","points","divided","subdivide","x","position","y","w","size","width","h","height","northEast","Rectangle","northWest","southEast","southWest","insert","point","_a","_b","_c","_d","_e","contains","length","push","queryCircle","radius","query","Circle","queryCircleWarp","containerOrSize","container","CircleWarp","canvas","undefined","queryRectangle","range","found","res","intersects","p","getDistance","particle","getRadius"],"sources":["C:/Users/XGaming Systems/Downloads/Portfolio-v2-main/Portfolio_Ian/node_modules/tsparticles/Utils/QuadTree.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QuadTree = void 0;\nconst Rectangle_1 = require(\"./Rectangle\");\nconst Circle_1 = require(\"./Circle\");\nconst CircleWarp_1 = require(\"./CircleWarp\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nclass QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x;\n        const y = this.rectangle.position.y;\n        const w = this.rectangle.size.width;\n        const h = this.rectangle.size.height;\n        const capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle_1.Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize;\n        const size = containerOrSize;\n        return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        else {\n            for (const p of this.points) {\n                if (!range.contains(p.position) && (0, NumberUtils_1.getDistance)(range.position, p.position) > p.particle.getRadius()) {\n                    continue;\n                }\n                res.push(p.particle);\n            }\n            if (this.divided) {\n                (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n                (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n                (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n                (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n            }\n        }\n        return res;\n    }\n}\nexports.QuadTree = QuadTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}