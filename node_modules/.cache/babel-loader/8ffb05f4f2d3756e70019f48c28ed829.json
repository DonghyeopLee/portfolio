{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TiltUpdater = void 0;\n\nconst Enums_1 = require(\"../../Enums\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nfunction updateTilt(particle, delta) {\n  var _a;\n\n  if (!particle.tilt) {\n    return;\n  }\n\n  const tilt = particle.options.tilt;\n  const tiltAnimation = tilt.animation;\n  const speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  const max = 2 * Math.PI;\n\n  if (!tiltAnimation.enable) {\n    return;\n  }\n\n  switch (particle.tilt.status) {\n    case Enums_1.AnimationStatus.increasing:\n      particle.tilt.value += speed;\n\n      if (particle.tilt.value > max) {\n        particle.tilt.value -= max;\n      }\n\n      break;\n\n    case Enums_1.AnimationStatus.decreasing:\n    default:\n      particle.tilt.value -= speed;\n\n      if (particle.tilt.value < 0) {\n        particle.tilt.value += max;\n      }\n\n      break;\n  }\n}\n\nclass TiltUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init(particle) {\n    const tiltOptions = particle.options.tilt;\n    particle.tilt = {\n      enable: tiltOptions.enable,\n      value: (0, Utils_1.getRangeValue)(tiltOptions.value) * Math.PI / 180,\n      sinDirection: Math.random() >= 0.5 ? 1 : -1,\n      cosDirection: Math.random() >= 0.5 ? 1 : -1\n    };\n    let tiltDirection = tiltOptions.direction;\n\n    if (tiltDirection === Enums_1.TiltDirection.random) {\n      const index = Math.floor(Math.random() * 2);\n      tiltDirection = index > 0 ? Enums_1.TiltDirection.counterClockwise : Enums_1.TiltDirection.clockwise;\n    }\n\n    switch (tiltDirection) {\n      case Enums_1.TiltDirection.counterClockwise:\n      case \"counterClockwise\":\n        particle.tilt.status = Enums_1.AnimationStatus.decreasing;\n        break;\n\n      case Enums_1.TiltDirection.clockwise:\n        particle.tilt.status = Enums_1.AnimationStatus.increasing;\n        break;\n    }\n\n    const tiltAnimation = particle.options.tilt.animation;\n\n    if (tiltAnimation.enable) {\n      particle.tilt.velocity = tiltAnimation.speed / 360 * this.container.retina.reduceFactor;\n\n      if (!tiltAnimation.sync) {\n        particle.tilt.velocity *= Math.random();\n      }\n    }\n  }\n\n  isEnabled(particle) {\n    const tilt = particle.options.tilt;\n    const tiltAnimation = tilt.animation;\n    return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateTilt(particle, delta);\n  }\n\n}\n\nexports.TiltUpdater = TiltUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","TiltUpdater","Enums_1","require","Utils_1","updateTilt","particle","delta","_a","tilt","options","tiltAnimation","animation","speed","velocity","factor","max","Math","PI","enable","status","AnimationStatus","increasing","decreasing","constructor","container","init","tiltOptions","getRangeValue","sinDirection","random","cosDirection","tiltDirection","direction","TiltDirection","index","floor","counterClockwise","clockwise","retina","reduceFactor","sync","isEnabled","destroyed","spawning","update"],"sources":["C:/Users/XGaming Systems/Downloads/Portfolio-v2-main/Portfolio_Ian/node_modules/tsparticles/Updaters/Tilt/TiltUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TiltUpdater = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction updateTilt(particle, delta) {\n    var _a;\n    if (!particle.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt;\n    const tiltAnimation = tilt.animation;\n    const speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case Enums_1.AnimationStatus.increasing:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case Enums_1.AnimationStatus.decreasing:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n}\nclass TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: ((0, Utils_1.getRangeValue)(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: Math.random() >= 0.5 ? 1 : -1,\n            cosDirection: Math.random() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === Enums_1.TiltDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            tiltDirection = index > 0 ? Enums_1.TiltDirection.counterClockwise : Enums_1.TiltDirection.clockwise;\n        }\n        switch (tiltDirection) {\n            case Enums_1.TiltDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.tilt.status = Enums_1.AnimationStatus.decreasing;\n                break;\n            case Enums_1.TiltDirection.clockwise:\n                particle.tilt.status = Enums_1.AnimationStatus.increasing;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt.animation;\n        if (tiltAnimation.enable) {\n            particle.tilt.velocity = (tiltAnimation.speed / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tilt = particle.options.tilt;\n        const tiltAnimation = tilt.animation;\n        return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\nexports.TiltUpdater = TiltUpdater;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}